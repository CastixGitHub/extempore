;;; rtmidi.xtm -- rtmidi bindings for Extempore

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: librtmidi

;;; Commentary:

;; Extempore bindings for Gary P. Scavone's RTMidi library

;; These bindings were automatically generated by c2xt.py on 2018-08-08

;;; Code:

(sys:load "libs/aot-cache/rtmidi.xtm" 'quiet)
(sys:load-preload-check 'rtmidi)
(define *xtmlib-rtmidi-loaded* #f)

(impc:aot:suppress-aot-do
 (sys:load "libs/base/base.xtm"))
(impc:aot:insert-forms
 (sys:load "libs/base/base.xtm" 'quiet))

(impc:aot:insert-header "xtmrtmidi")

;; set up the current dylib name and path (for AOT compilation)
(bind-dylib librtmidi
  (cond ((string=? (sys:platform) "OSX")
         "librtmidi.dylib")
        ((string=? (sys:platform) "Linux")
         "librtmidi.so")
        ((string=? (sys:platform) "Windows")
         "rtmidi.dll")))

(bind-type RtMidiWrapper <i8*,i8*,i1,i8*> "@member ptr - index 0
@member data - index 1
@member ok - index 2
@member msg - index 3")
(bind-alias RtMidiPtr RtMidiWrapper* "")
(bind-alias RtMidiInPtr RtMidiWrapper* "")
(bind-alias RtMidiOutPtr RtMidiWrapper* "")
(bind-alias RtMidiApi i32 "i32")
(bind-val RT_MIDI_API_UNSPECIFIED RtMidiApi 0 "")
(bind-val RT_MIDI_API_MACOSX_CORE RtMidiApi 1 "")
(bind-val RT_MIDI_API_LINUX_ALSA RtMidiApi 2 "")
(bind-val RT_MIDI_API_UNIX_JACK RtMidiApi 3 "")
(bind-val RT_MIDI_API_WINDOWS_MM RtMidiApi 4 "")
(bind-val RT_MIDI_API_WINDOWS_KS RtMidiApi 5 "")
(bind-val RT_MIDI_API_RTMIDI_DUMMY RtMidiApi 6 "")
(bind-alias RtMidiErrorType i32 "i32")
(bind-val RT_ERROR_WARNING RtMidiErrorType 0 "")
(bind-val RT_ERROR_DEBUG_WARNING RtMidiErrorType 1 "")
(bind-val RT_ERROR_UNSPECIFIED RtMidiErrorType 2 "")
(bind-val RT_ERROR_NO_DEVICES_FOUND RtMidiErrorType 3 "")
(bind-val RT_ERROR_INVALID_DEVICE RtMidiErrorType 4 "")
(bind-val RT_ERROR_MEMORY_ERROR RtMidiErrorType 5 "")
(bind-val RT_ERROR_INVALID_PARAMETER RtMidiErrorType 6 "")
(bind-val RT_ERROR_INVALID_USE RtMidiErrorType 7 "")
(bind-val RT_ERROR_DRIVER_ERROR RtMidiErrorType 8 "")
(bind-val RT_ERROR_SYSTEM_ERROR RtMidiErrorType 9 "")
(bind-val RT_ERROR_THREAD_ERROR RtMidiErrorType 10 "")
(bind-alias RtMidiCCallback i8* "")
(bind-lib librtmidi rtmidi_sizeof_rtmidi_api [i32]* "")
(bind-lib librtmidi rtmidi_get_compiled_api [i32,RtMidiApi**]* "@param apis - index 0")
;; (bind-lib librtmidi rtmidi_error [void,i32,i8*]* "@param type - index 0
;; @param errorString - index 1")
(bind-lib librtmidi rtmidi_open_port [void,RtMidiPtr,i32,i8*]* "@param device - index 0
@param portNumber - index 1
@param portName - index 2")
(bind-lib librtmidi rtmidi_open_virtual_port [void,RtMidiPtr,i8*]* "@param device - index 0
@param portName - index 1")
(bind-lib librtmidi rtmidi_close_port [void,RtMidiPtr]* "@param device - index 0")
(bind-lib librtmidi rtmidi_get_port_count [i32,RtMidiPtr]* "@param device - index 0")
(bind-lib librtmidi rtmidi_get_port_name [i8*,RtMidiPtr,i32]* "@param device - index 0
@param portNumber - index 1")
(bind-lib librtmidi rtmidi_in_create_default [RtMidiInPtr]* "@param RtMidiInPtr - index 0")
(bind-lib librtmidi rtmidi_in_create [RtMidiInPtr,i32,i8*,i32]* "@param RtMidiInPtr - index 0
@param api - index 1
@param clientName - index 2
@param queueSizeLimit - index 3")
(bind-lib librtmidi rtmidi_in_free [void,RtMidiInPtr]* "@param device - index 0")
(bind-lib librtmidi rtmidi_in_get_current_api [i32,RtMidiPtr]* "@param enum RtMidiApi - index 0
@param device - index 1")
(bind-lib librtmidi rtmidi_in_set_callback [void,RtMidiInPtr,RtMidiCCallback,i8*]* "@param device - index 0
@param callback - index 1
@param userData - index 2")
(bind-lib librtmidi rtmidi_in_cancel_callback [void,RtMidiInPtr]* "@param device - index 0")
(bind-lib librtmidi rtmidi_in_ignore_types [void,RtMidiInPtr,i1,i1,i1]* "@param device - index 0
@param midiSysex - index 1
@param midiTime - index 2
@param midiSense - index 3")
(bind-lib librtmidi rtmidi_in_get_message [double,RtMidiInPtr,i8**,size_t*]* "@param device - index 0
@param message - index 1
@param size - index 2")
(bind-lib librtmidi rtmidi_out_create_default [RtMidiOutPtr]* "@param RtMidiOutPtr - index 0")
(bind-lib librtmidi rtmidi_out_create [RtMidiOutPtr,i32,i8*]* "@param RtMidiOutPtr - index 0
@param api - index 1
@param clientName - index 2")
(bind-lib librtmidi rtmidi_out_free [void,RtMidiOutPtr]* "@param device - index 0")
(bind-lib librtmidi rtmidi_out_get_current_api [i32,RtMidiPtr]* "@param enum RtMidiApi - index 0
@param device - index 1")
(bind-lib librtmidi rtmidi_out_send_message [i32,RtMidiOutPtr,i8*,i32]* "@param device - index 0
@param message - index 1
@param length - index 2")
(impc:aot:suppress-aot-do
 (sys:load "libs/contrib/rtmidi-scm.xtm"))
(impc:aot:insert-footer "xtmrtmidi")
(define *xtmlib-rtmidi-loaded* #t)

