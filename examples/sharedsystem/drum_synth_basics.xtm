;;;
;;; The parameters available to the 'analogue' drum synth
;;;

;; set everything to defaults!

;; MAIN:
;; portamento only in overlapping monophonic playback
;; inst, gain(0.0-3.0), pan(0.0-1.0)
(set_main kit 2.0 0.5)
(set_polyphony kit 8) ;; (1-32)

;; OSCILLATORS: * 4
;; where tuning is a frequency(hz) relation to incoming pitch
;; i.e. 1.0 is no change, 0.5 is octave below, 2.0 is octave above, 1.0029237 is a slight detune etc.
;; inst, osc#(1-4), gain(0.0-2.0), wave(PARAM_(SAW|TRI|PULSE|TRI)), tuning(0.0-16.0), pulse width(0.0-1.0), phase(0.0-1.0)
(set_osc syn1 1 0.5 PARAM_SAW 1.0 0.0 0.0)

;; ENVELOPES: 
;; inst, attack(ms), decay(ms), sustain(0.0-1.0), release(ms)
(set_amp_env syn1 0.0 0.0 1.0 0.0)
(set_filter_env syn1 0.0 0.0 1.0 0.0)

;; LOW PASS FILTER: 
;; inst, frq(hz), resonance(0.0-1.0), drive(0.0-3.0), db slope(12|24), amount of envelope(hz), track frq(0.0-1.0), track env(0.0-1.0)
(set_filter syn1 18000.0 0.0 0.0 24 0.0 0.0 0.0)

;; DELAY: 
;; inst, mix(0.0-1.0), left-delay(ms), right-delay(ms), feedback(0.0-1.0), lpf cutoff(hz), lpf Q(0.0-1.0)
(set_delay syn1 0.0 (/ 1000.0 5) (/ 1000.0 7) 0.5 18000.0 0.0)

;; REVERB: 
;; inst, mix(0.0-1.0), size(0.0-1.0), pre delay(ms), absorb(0.0-1.0)
(set_reverb syn1 0.0 0.2 75.0 0.1)

;; FLANGER:
;; inst, mix(0.0-1.0), low delay(ms), high delay(ms), rate(hz), feedback(0.0-1.0)
(set_flanger syn1 0.0 5.0 8.0 0.123 0.0)

;; NOISE:
;; inst, gain(0.0-1.0+)
(set_noise_amp syn1 0.0)
;; inst PARAM_PINK | PARAM_WHITE
(set_noise_type syn1 PARAM_PINK)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; OK let's start a basic pattern to get
;; some noise happening.
(:> E 4 0 (play kit (+ 0 @1) 80 (* 1.0 dur)) `(12 12 12 12))
(:> C 4 1 (play kit (+ 0 @1) 90 dur) `(24 24))
(:> D 2 1 (play kit (+ (random '(12 12 12 24)) @1) (cosr 90 30 (random '(7/4 7/5))) (* 1.0 dur)) `(,(nof 8 24)))

(main_reverb 1 0.0) ;; syn1
(main_reverb 2 0.0) ;; syn1
(main_reverb 3 0.0) ;; syn1

(set_reverb kit 0.2 0.3 75.0 0.0)
(set_flanger kit 0.0 5.0 24.0 0.929323 0.3)
(set_delay kit 0.0 (/ 100.0 7) (/ 100.0 3) 0.5 10000.0 0.0)

(set_dlogue kit 1.5 0.5)

;; A Kick Drum syn1
;; first classic step is to introduce
;; second detuned oscillator
;; see above for params of set_osc
(set_osc syn1 1 0.5 PARAM_SINE 1.0 0.0 0.0)
(set_osc syn1 2 0.5 PARAM_SINE 1.118273 0.0 0.0)
(set_amp_env syn1 0.0 500.0 0.0 0.0)
(set_pitch_env syn1 0.0 1.0)
(set_pitch_env_amt syn1 10.0)
(set_main syn1 5.0 0.5 100.0 LEGATO_ON) 
(set_polyphony syn1 4)

;; A snare syn2
;; first classic step is to introduce
;; second detuned oscillator
;; see above for params of set_osc
(set_osc syn2 1 0.5 PARAM_SINE 1.23874 0.0 0.5)
(set_osc syn2 2 0.5 PARAM_SINE 1.1118273 0.0 0.0)
(set_amp_env syn2 0.0 400.0 0.0 0.0)
(set_pitch_env syn2 0.0 5.0)
(set_pitch_env_amt syn2 10.0)
(set_noise_amp syn2 0.6)
(set_main syn2 5.0 0.5 100.0 LEGATO_ON) 
(set_polyphony syn2 4)

;; a synth hh syn3
(set_osc syn3 1 0.3 PARAM_PULSE 1.19201928 0.35 0.112980)
(set_osc syn3 2 0.3 PARAM_PULSE 1.49918505118273 0.1325 0.0)
;;(set_osc syn3 3 0.3 PARAM_PULSE 2.00010225118273 0.121925 0.0)
(set_amp_env syn3 0.0 200.0 0.0 0.0)
(set_pitch_env syn3 0.0 10.0)
(set_pitch_env_amt syn3 5.0)
(set_noise_amp syn3 0.2)
(set_main syn3 3.0 0.5 100.0 LEGATO_ON) 
(set_filter syn3 6500.0 0.2 2.0 12 0.0 0.0 0.0)

(dsp3.cf 7900.0)
(dsp3.res 0.9)

(bind-func dsp3:DSP
  (let ((load 0.0)
        (cf 10000.0)
        (res 0.0)
        (total 0.0)
        (tmp 0.0)
        (svf1 (svf_c))
        (svf2 (svf_c))
        (fout:|6,SAMPLE|* (alloc))
        (out 0.0)
        (second SR))
    (lambda (in time chan dat)
      (if (< chan 1)
          (begin
            (set! tmp (clock_clock))
            (set! out (syn3 in time chan dat))
            (set! total (+ total (- (clock_clock) tmp)))
            (svf1 out cf res fout)
            (if (and (= (% time second) 0) (= chan 0))
                (begin 
                  (set! load total)
                  (set! total 0.0)))
            (set! out (aref fout 1)))
          out))))

